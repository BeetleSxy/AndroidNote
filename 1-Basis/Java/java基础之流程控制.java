简述
　　在java中的流程控制语句可以分为条件语句、循环语句和循环控制语句。
	
	条件语句:if...else,switch
	
		if语句:if语句有三种格式
			格式一:
				if(比较表达式){
					语句题;
				}
			执行流程:
				首先计算比较表达式的值
				如果返回值为true就执行语句体
				如果是false就不执行
			注意:
				* a:比较表达式无论简单还是复杂，结果必须是boolean类型
				* b:if语句控制的语句体如果是一条语句，大括号可以省略；
					* 如果是多条语句，就不能省略。建议永远不要省略。
				* c:一般来说：有左大括号就没有分号，有分号就没有左大括号
			
			格式二:
				if(比较表达式){
					语句体1;
				}else{
					语句体2;
				}
			执行流程:
				首先计算比较表达式的值;
				如果返回值为true就执行语句体1;
				如果是false就执行语句体2;
			注意	
				* a:获取两个数据中较大的值
				* b:判断一个数据是奇数还是偶数,并输出是奇数还是偶数
				* else后面是没有比较表达式的，只有if后面有。
			格式三:
				if(比较表达式1){
					语句体1;
				}else if(比较表达式2){
					语句体2;
				}else if(比较表达式3){
					语句体3
				}else if(...){
					...
				}
					...
				}else {
					语句体n;
				}
			执行流程:
				首先计算比较表达式1
				如果是true，就执行语句体1，if语句结束。
				如果是false，接着计算比较表达式2看其返回值是true还是false;
				如果都是false就执行语句体N+1
				注意:
					最后的else其实是可以省略,建议不要去省略,可以对范围外的数据/错误提示
					
		switch语句:
			switch语句相对if语句来说格式没有那么多只有一种格式;
			switch(判断数据){
				case 条件1:
					语句体1;
					break;
					
				case 条件2:
					语句体2;
					break;
					
				case 条件3:
					语句体3;
					break;
					.
					.
					.
				case 条件N:
					语句体N;
					break;
					
				default:
					语句体N+1;
					break;
			}
			
			这个就是switch语句书写格式了,相比较if语句书写复杂了很多,但是switch语句在判断一个变量不同值时的不同返回结果,要比if方便多,和if语句的使用的方式不同,大家按照使用场景去选择.
			注意:
				1.方法不调用不执行;
				2.方法和方法是平级的,不可以嵌套定义.
				3.方法定义的时候不用传递数据类型.
				4.方法有返回值时一定要用return返回一个值.
			问题:
				* a:case后面只能是常量，不能是变量，而且，多个case后面的值不能出现相同的
				* b:default可以省略吗?
					* 可以省略，但是不建议，因为它的作用是对不正确的情况给出提示。
					* 特殊情况：
						* case就可以把值固定。
						* A,B,C,D
				* c:break可以省略吗?
					* 最后一个可以省略,其他最好不要省略
					* 会出现一个现象：case穿透。
					* 最终我们建议不要省略
				* d:default一定要在最后吗?
					* 不是，可以在任意位置。但是建议在最后。
				* e:switch语句的结束条件
					* a:遇到break就结束了
					* b:执行到switch的右大括号就结束了
					
				case穿透,就是指当条件满足后执行完语句体,但是没有break去结束语句,还是会去走下一个语句体.直到遇到break才会结束语句.
	
	循环语句:for,while
		for语句:
			for ( 初始化变量 ; 判断语句 ; 循环后操作 ) {
				语句体;
			}
		执行流程:
			1:执行初始化语句
			2:执行判断条件语句,看其返回值是true还是false
				如果是true，就继续执行
				如果是false，就结束循环
			3:执行循环体语句;
			4:执行循环后的操作表达式
			5:回到B继续。
		
		while语句:
		
		while(判断条件语句) {
			 循环体语句;
			 控制条件语句;
		}
		
		1:执行初始化语句
		2:执行判断条件语句,看其返回值是true还是false
			* 如果是true，就继续执行
			* 如果是false，就结束循环
		3:执行循环体语句;
		4:执行控制条件语句
		5:回到B继续。
		
	控制跳转语句:break,continue,return
		break:
			使用场景:switch , 循环中.
			作用:用来结束循环或者switch语句
			
		continue:
			使用场景:循环中
			作用: 结束本次循环 , 执行下一次循环
			
		return:
			作用: 结束方法的
			
		大体已经说完了,建议刚开始学习的朋友可以去敲一些简单的小demo去练练手
		
		